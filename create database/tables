SHOW DATABASES;// THIS COMMAND PROVIDES ABOUT AVAILABLE DATABASES
show tables;// PROVIDES ABOUT AVAILABLE TABLES
CREATE DATABASE PROJECT_MANAGEMENT_TOOL;// THIS DDL COMMAND CREATE CREATES A NEW DATABASE NAME PROJECT_MANAGEMENT_TOOL
USE DATABASE PROJECT_MANAGEMENT_TOOL; // THIS COMMAND TELLS THE SNOWFLAKE  COMPUTE NODE TO USE THE DATABASE CALLED PROJECT_MANAGEMENT_TOOL

CREATE SCHEMA WEB_DEVELOPMENT;// THIS DDL COMMAND CREATES A NEW SCHEMA

// THE TABLE EMPLOYEE HOLDS ITS ATTRIBUTES OF THE FOLLOWING
CREATE TABLE PROJECT_MANAGEMENT_TOOL.WEB_DEVELOPMENT.EMPLOYEE(
USER_ID NUMBER(38,2)      NOT NULL,
EMAIL VARCHAR(100)         NOT NULL, 
PASSWORD VARCHAR(100)      NOT NULL,
EMPLOYEE_ID NUMBER(38,2)  NOT NULL,
PRIMARY KEY(USER_ID)
);

//THE TABLE PROJECT HOLDS ITS ATTRIBUTES OF THE FOLLOWING 
CREATE TABLE PROJECT_MANAGEMENT_TOOL.WEB_DEVELOPMENT.PROJECT(
PROJECT_ID NUMBER(38,2)  NOT NULL,
TITTLE      VARCHAR(100)          ,
DURATION    VARCHAR(100)          ,
USER_ID     NUMBER(38,2) NOT NULL,
PRIMARY KEY(PROJECT_ID),
FOREIGN KEY (USER_ID) REFERENCES EMPLOYEE(USER_ID)
);

//THIS TABLE HOLDS ITS ATTRIBUTES OF THE FOLLOING 
CREATE TABLE PROJECT_MANAGEMENT_TOOL.WEB_DEVELOPMENT.TASK(
TASK_ID NUMBER(38,2)         NOT NULL,
TASK_NAME VARCHAR(100)               ,
EMPLOYEE_ID NUMBER(38,2)     NOT NULL,
EMPLOYEE_NAME VARCHAR(100)           ,
PROJECT_ID NUMBER(38,2)      NOT NULL,
PRIMARY KEY(TASK_ID),
FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(PROJECT_ID)
);

/*IF WE NEED ABOUT INDIVIDUAL TABLE DETAILS WE CAN USE THE BELOW FOLLOWING COMMANDS */
DESC TABLE PROJECT_MANAGEMENT_TOOL.WEB_DEVELOPMENT.EMPLOYEE;
DESC TABLE PROJECT_MANAGEMENT_TOOL.WEB_DEVELOPMENT.PROJECT;
DESC TABLE PROJECT_MANAGEMENT_TOOL.WEB_DEVELOPMENT.TASK;
